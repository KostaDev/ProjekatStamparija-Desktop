/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.stampanje;

import domen.Stampanje;
import domen.Masina;
import domen.Dokument;
import domen.IOpstiDomenskiObjekat;
import enumeracije.ModForme;
import forme.glavna.FormaGlavna;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import modeli.ModelTabeleDokument;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Kosta
 */
public class FormaUnosStampanja extends javax.swing.JDialog {

    private Stampanje s;
    private FormaPregledStampanja formaPregled;
    SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
    private ModForme mod;
    /**
     * Creates new form FormaUnosStampanja
     */
    public FormaUnosStampanja(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        srediFormu();
    }
    
        public FormaUnosStampanja(java.awt.Frame parent, boolean modal, FormaPregledStampanja formaPregled, ModForme m) {
        this(parent, modal);        
        this.formaPregled = formaPregled;
        mod = m;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNapomena = new javax.swing.JTextField();
        txtRokZaIzvrsenje = new javax.swing.JTextField();
        checkPlaceno = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDokumenata = new javax.swing.JTable();
        btnDodajDokument = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnObrisiDokument = new javax.swing.JButton();
        btnIzmeniDokument = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Napomena:");

        jLabel2.setText("Rok za izvrsenje:");

        checkPlaceno.setText("Placeno");
        checkPlaceno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkPlacenoActionPerformed(evt);
            }
        });

        tabelaDokumenata.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaDokumenata);

        btnDodajDokument.setText("Dodaj dokument");
        btnDodajDokument.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajDokumentActionPerformed(evt);
            }
        });

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnObrisiDokument.setText("Obrisi dokument");
        btnObrisiDokument.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiDokumentActionPerformed(evt);
            }
        });

        btnIzmeniDokument.setText("Izmeni dokument");
        btnIzmeniDokument.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniDokumentActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDodajDokument)
                        .addGap(18, 18, 18)
                        .addComponent(btnObrisiDokument)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnIzmeniDokument))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnIzmeni)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnSacuvaj)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnObrisi))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(checkPlaceno)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNapomena)
                                    .addComponent(txtRokZaIzvrsenje, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNapomena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRokZaIzvrsenje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(checkPlaceno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodajDokument)
                    .addComponent(btnObrisiDokument)
                    .addComponent(btnIzmeniDokument))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnObrisi)
                    .addComponent(btnIzmeni))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajDokumentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajDokumentActionPerformed
        FormaDodajDokument dodaj = new FormaDodajDokument((FormaGlavna)getParent(), true);
        dodaj.setDijalog(this);
        dodaj.pack();
        dodaj.setVisible(true);
    }//GEN-LAST:event_btnDodajDokumentActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        String rok = txtRokZaIzvrsenje.getText();
        String napomena = txtNapomena.getText();
        Date dat =null;
        try {
            dat = sdf.parse(rok);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Datum mora biti dd.MM.yyyy");
            return;
        }
        ModelTabeleDokument model = (ModelTabeleDokument) tabelaDokumenata.getModel();
        List<IOpstiDomenskiObjekat> lista = model.getLista();
                
        try {
            
            if(mod==ModForme.UNOS){
                Stampanje s = new Stampanje(-1, napomena, dat, checkPlaceno.isSelected(), Kontroler.getInstance().getRadnik(), null);
                s.setListaDokumenata(lista);
                ServerskiOdgovor so = Kontroler.getInstance().sacuvajStampanje(s);
                JOptionPane.showMessageDialog(this, so.getPoruka());
            } else if (mod == ModForme.IZMENA) {
                s.setRokZaIzvrsenje(dat);
                s.setNapomena(napomena);
                s.setPlaceno(checkPlaceno.isSelected());
                s.setListaDokumenata(lista);
                ServerskiOdgovor so = Kontroler.getInstance().izmeniStampanje(s);
                JOptionPane.showMessageDialog(this, so.getPoruka());
            }
        } catch (Exception ex) {
            Logger.getLogger(FormaUnosStampanja.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Doslo je do greske prilikom cuvanja podataka o masini. ");
        }    
         
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        ServerskiOdgovor so = Kontroler.getInstance().obrisiStampanje(s);
        JOptionPane.showMessageDialog(this, so.getPoruka());
        formaPregled.pretrazi();
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void checkPlacenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkPlacenoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkPlacenoActionPerformed

    private void btnObrisiDokumentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiDokumentActionPerformed
        ModelTabeleDokument mtd = (ModelTabeleDokument) tabelaDokumenata.getModel();
        int i = tabelaDokumenata.getSelectedRow();
        if (i==-1) {
            return;
        }
        List<IOpstiDomenskiObjekat> lista = mtd.getLista();
        lista.remove(i);
        mtd.setLista(lista);



    }//GEN-LAST:event_btnObrisiDokumentActionPerformed

    private void btnIzmeniDokumentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniDokumentActionPerformed
        ModelTabeleDokument mtd = (ModelTabeleDokument) tabelaDokumenata.getModel();
        
        int i = tabelaDokumenata.getSelectedRow();
        if(i!=-1){
            Dokument dok = mtd.vratiDokument(i);
            FormaDodajDokument fdd= new FormaDodajDokument((FormaGlavna)getParent(), true, this, ModForme.UNOS);
            fdd.setDokument(dok);
            fdd.setIndexDokumenta(i);
            fdd.srediZaIzmenu(true);
            fdd.pack();
            fdd.setVisible(true);
        
        }
    }//GEN-LAST:event_btnIzmeniDokumentActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        btnDodajDokument.setEnabled(true);
        btnIzmeniDokument.setEnabled(true);
        btnObrisiDokument.setEnabled(true);
        txtRokZaIzvrsenje.setEnabled(true);
        txtNapomena.setEnabled(true);
        checkPlaceno.setEnabled(true);
        
        
        btnObrisi.setVisible(true);
        btnIzmeni.setVisible(false);
        btnSacuvaj.setVisible(true);
        mod = ModForme.IZMENA;
        
    }//GEN-LAST:event_btnIzmeniActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaUnosStampanja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaUnosStampanja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaUnosStampanja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaUnosStampanja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormaUnosStampanja dialog = new FormaUnosStampanja(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajDokument;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnIzmeniDokument;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnObrisiDokument;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JCheckBox checkPlaceno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaDokumenata;
    private javax.swing.JTextField txtNapomena;
    private javax.swing.JTextField txtRokZaIzvrsenje;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        ModelTabeleDokument mtd = new ModelTabeleDokument();
        tabelaDokumenata.setModel(mtd);
        
        btnObrisi.setVisible(false);
        btnIzmeni.setVisible(false);
        mod = ModForme.UNOS;
    }

    void dodajDokument(Dokument dok) {
        ModelTabeleDokument model = (ModelTabeleDokument) tabelaDokumenata.getModel();
        model.dodajDokument(dok);
    }

    void postaviFormu(IOpstiDomenskiObjekat stampanje) {
        btnDodajDokument.setEnabled(false);
        btnIzmeniDokument.setEnabled(false);
        btnObrisiDokument.setEnabled(false);
        btnObrisi.setVisible(true);
        btnIzmeni.setVisible(true);
        btnSacuvaj.setVisible(false);
        
        s = (Stampanje) stampanje;
        
        txtRokZaIzvrsenje.setEnabled(false);
        txtNapomena.setEnabled(false);
        checkPlaceno.setEnabled(false);
        
        txtRokZaIzvrsenje.setText(sdf.format(s.getRokZaIzvrsenje()));
        txtNapomena.setText(s.getNapomena());
        checkPlaceno.setSelected(s.isPlaceno());
        
        ModelTabeleDokument model = (ModelTabeleDokument) tabelaDokumenata.getModel();
        model.setLista(s.getListaDokumenata());
    }

    void izmeniDokument(Dokument trenutniDokument, int indeksTrenutnogDokumenta) {
        ModelTabeleDokument model = (ModelTabeleDokument) tabelaDokumenata.getModel();
        model.izmeniDokument(trenutniDokument,indeksTrenutnogDokumenta);
        model.fireTableDataChanged();
    }
}
